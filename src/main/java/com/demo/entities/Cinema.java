package com.demo.entities;
// Generated Mar 3, 2024, 9:42:09 PM by Hibernate Tools 4.3.6.Final

import java.util.HashSet;
import java.util.Set;
import jakarta.persistence.*;

/**
 * Cinema generated by hbm2java
 */
@Entity
@Table(name = "cinema")
public class Cinema implements java.io.Serializable {

	private Integer cineId;
	private City city;
	private String cineName;
	private String cineAddress;
	private String cinePhoto;
	private Set<Hall> halls = new HashSet<Hall>(0);
	private Set<Movie> movies = new HashSet<Movie>(0);

	public Cinema() {
	}

	public Cinema(City city, String cineName, String cineAddress, String cinePhoto) {
		this.city = city;
		this.cineName = cineName;
		this.cineAddress = cineAddress;
		this.cinePhoto = cinePhoto;
	}

	public Cinema(City city, String cineName, String cineAddress, String cinePhoto, Set<Hall> halls,
			Set<Movie> movies) {
		this.city = city;
		this.cineName = cineName;
		this.cineAddress = cineAddress;
		this.cinePhoto = cinePhoto;
		this.halls = halls;
		this.movies = movies;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)

	@Column(name = "cine_id", unique = true, nullable = false)
	public Integer getCineId() {
		return this.cineId;
	}

	public void setCineId(Integer cineId) {
		this.cineId = cineId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cine_city_id", nullable = false)
	public City getCity() {
		return this.city;
	}

	public void setCity(City city) {
		this.city = city;
	}

	@Column(name = "cine_name", nullable = false, length = 250)
	public String getCineName() {
		return this.cineName;
	}

	public void setCineName(String cineName) {
		this.cineName = cineName;
	}

	@Column(name = "cine_address", nullable = false, length = 250)
	public String getCineAddress() {
		return this.cineAddress;
	}

	public void setCineAddress(String cineAddress) {
		this.cineAddress = cineAddress;
	}

	@Column(name = "cine_photo", nullable = false, length = 250)
	public String getCinePhoto() {
		return this.cinePhoto;
	}

	public void setCinePhoto(String cinePhoto) {
		this.cinePhoto = cinePhoto;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cinema")
	public Set<Hall> getHalls() {
		return this.halls;
	}

	public void setHalls(Set<Hall> halls) {
		this.halls = halls;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "cinemamovie", catalog = "booking_online", joinColumns = {
			@JoinColumn(name = "cine_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "mov_id", nullable = false, updatable = false) })
	public Set<Movie> getMovies() {
		return this.movies;
	}

	public void setMovies(Set<Movie> movies) {
		this.movies = movies;
	}

}
